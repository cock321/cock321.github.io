{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Stock","props","stock","Detail","useState","myAlert","myAlertChange","myAlertDisappear","useEffect","Deletetimer","setTimeout","clearTimeout","history","useHistory","useParams","myFlowers","flowers","find","el","className","src","width","onClick","newStock","stockChange","push","Products","Nav","Link","as","to","i","App","flowerData","flowerChange","load","loadChange","Navbar","bg","variant","Container","Brand","href","exact","path","type","map","axios","get","then","result","data","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75225b9d.chunk.js","sourcesContent":["export default [\n    {\n        id : 0,\n        title : \"Rose\",\n        content : \"Born in France\",\n        price : \"20000원\"\n    },\n\n    {\n        id : 1,\n        title : \"Bouquet\",\n        content : \"Born in USA\",\n        price : \"30000원\"\n    },\n\n    {\n        id : 2,\n        title : \"Forget-me-not\",\n        content : \"Born in Seoul\",\n        price : \"15000원\"\n    }\n]\n\n\n\n\n\n","// react, useEffect import\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\n// history import, useParams import( url파라미터 )\nimport { useHistory, useParams } from \"react-router-dom\";\n\n// Detail.scss import\nimport './Detail.scss';\n\n// Detail Component\nfunction Detail(props){\n\n    // myAlert state\n    let [myAlert, myAlertChange] = useState(true);\n\n    // myAlert 경고창을 삭제하는 함수 myAlertDisappear \n    function myAlertDisappear(){\n        myAlertChange(false);\n    }\n\n    // * useEffect hook\n    // --> 컴포넌트가 등장할 때, update될 때, 사라질 때 특정코드 실행가능\n    // --> useEffect()는 여러번 사용할 수 있는데, 이때는 순서대로 적용된다.\n    useEffect(() => {\n        // Detail 컴포넌트가 등장, update될 때 실행할 코드 ( mount )y\n        let Deletetimer = setTimeout(myAlertDisappear, 2000);\n\n        // Detail 컴포넌트가 사라질 때 실행할 코드 ( unmount )\n        return () => {\n            clearTimeout(Deletetimer); \n            // clearTimeout --> setTimeout 제거 ( 버그 주의 )\n        }\n    }, [myAlert]);    // [state명] --> 특정 state가 업데이터될 때만 useEffect 실행 / [] --> update시 실행 안됨, 등장할 때만 실행됨!!\n\n    // history\n    let history = useHistory();\n\n    // url 파라미터 사용하기\n    let { id } = useParams();\n\n    // id가 일치하는 요소를 가진 데이터 찾기\n    const myFlowers = props.flowers.find((el) => {\n        return el.id == id;\n    });\n\n    return(\n        <div className=\"detail container\">\n            <div className=\"title_box\">\n                <h2>{ myFlowers.title }</h2>\n            </div>\n\n            <div className=\"product_box row\">\n                <div className=\"img_box col-md-6\">\n                    <img src={\"/img/\"+ myFlowers.id +\".jpg\"} width=\"100%\"/>\n                </div>\n                \n                <div className=\"text_box col-md-6 d-flex flex-column align-items-center justify-content-center\">\n                    {/* 상품 설명 */}\n                    <h4 className=\"pt-5\">{ myFlowers.title }</h4>\n                    <p>{ myFlowers.content }</p>\n                    <p>{ myFlowers.price }</p>\n                    <Stock stock={props.stock}></Stock>\n\n                    <div>\n                        <button className=\"btn mx-1\" onClick={()=>{\n\n                            let copyStock = [...props.stock];\n                            let newStock = [copyStock[0]-1]\n                            props.stockChange(newStock);\n\n                        }}>주문하기</button>\n\n                        <button className=\"btn mx-1\" onClick={()=>{ \n                            history.push('/');\n                        }}>뒤로가기</button>\n                    </div>\n                    \n                    {/* 재고가 얼마남지 않았습니다.( 경고창 ) */}\n                    {\n                       myAlert === true\n                        ?(\n                            <div className=\"my_alert\">\n                                <p>재고가 얼마 남지 않았습니다 !</p>\n                            </div>\n                        )\n                        : null\n                    }      \n                </div>\n            </div>\n        </div>\n    )\n}\n\n// Stock Component\nfunction Stock(props){\n    return(\n        <p>재고 : { props.stock[0] }</p>\n    )\n}\n\nexport default Detail;\n\n\n\n\n","// eslint-disable-next-line\n\n// data.js import\nimport flowerData from './data.js'\n\n// react-bootstrap import\nimport { Navbar, Container, Nav } from 'react-bootstrap';\n\n// state import\nimport React, { useEffect, useState } from 'react';\n\n// router import\nimport { Link, Route, Switch } from 'react-router-dom';\n\n// Detail import\nimport Detail from './Detail.js';\n\n// axios import\nimport axios from 'axios';\n\nimport './App.scss';\n\nfunction App() {\n\n  let [flowers, flowerChange] = useState(flowerData);\n\n  let [load, loadChange] = useState(false);\n\n  let [stock, stockChange] = useState([10]);\n\n  return (\n    <div className=\"App\">\n      {/* Navbar */}\n      <Navbar bg=\"light\" variant=\"light\">\n        <Container>\n        <Navbar.Brand href=\"#home\">Flower Shop</Navbar.Brand>\n        <Nav className=\"me-auto\">\n          <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n          <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n          <Nav.Link>Pricing</Nav.Link>\n        </Nav>\n        </Container>\n      </Navbar>\n\n      <Switch>  \n        {/* 메인 페이지 */}\n        <Route exact path=\"/\">\n          {/* Main */}\n          <div className=\"p-5 mb-4 bg-light rounded-3 jumbotron\">\n            <div className=\"container-fluid py-5\">\n              <h1 className=\"display-5 fw-bold\">50% Season Off</h1>\n              <p className=\"col-md-8 fs-4\">Using a series of utilities, you can create this jumbotron, just like the one in previous versions of Bootstrap. Check out the examples below for how you can remix and restyle it to your liking.</p>\n              <button className=\"btn btn-light btn-lg\" type=\"button\">Example button</button>\n            </div>\n          </div>\n\n          {/* Products */}\n          <div className=\"container products\">\n            <div className=\"row\">\n              {\n                flowers.map(function(flowers, i){\n                  return( <Products flowers={flowers} i={i} key={i}></Products> )\n                })\n              }\n            </div>\n\n            {\n              load === true\n              ?(\n                <div className=\"load\">\n                  <h2>loading...</h2>\n                </div>\n              )\n              : null\n            }   \n\n            {/* more_btn ( ajax 요청 ) */}\n            <button className=\"more_btn btn btn-dark btn-lg\" onClick={()=>{\n\n              loadChange(true);\n\n              // GET 요청\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result) => {\n                loadChange(false);\n                flowerChange([...flowers, ...result.data]);\n              })\n              .catch(()=>{\n                console.log('실패!!');\n              })\n\n            } }>More</button>\n          </div>\n        </Route>\n\n        {/* 상세 페이지 */}\n        <Route exact path=\"/detail/:id\">\n          <Detail flowers={flowers} stock={stock} stockChange={stockChange}></Detail>\n        </Route>\n      </Switch>\n      \n    </div>\n  );\n}\n\n// Products Component\nfunction Products(props){\n  return(\n    <div className=\"col-md-4\">\n      <Nav.Link as={Link} to={\"/detail/\" + props.i}>\n        <img src= { \"img/\" + props.i + \".jpg\" } />\n\n        <div className=\"text_box\">\n          <h3>{props.flowers.title}</h3>\n          <p>{props.flowers.content} & {props.flowers.price}</p>\n        </div>\n      </Nav.Link>\n    </div>\n  )\n}\n\nexport default App;\n\n// router\n// html 내부의 내용을 갈아치워 다른페이지처럼 보여준다.\n\n// Switch\n// 중복되는 경로가 있으면 맨처음 것을 보여준다.\n\n// :id --> url 파라미터\n\n\n\n// 서버\n// --> 데이터를 요청하면 가져다주는 프로그램\n\n// 요청의 종류\n// 1) url 요청 ( GET ) --> 단순히 자료를 읽고 싶을 때 사용\n// 2) 서버로 중요 정보 전달하기 ( POST ) --> 로그인 등\n// * GET, POST 모두 요청할 때마다 새로고침 됨\n\n// Ajax \n// --> 서버에 새로고침없이 요청을 할 수 있도록 도와줌.\n\n// Ajax 사용법\n// 1) jQuery 설치하여 $.ajax() 사용하기\n// 2) axios 설치하여 axios.get() 사용하기 ***\n// 3) 자바스크립트 fetch() 함수 사용하기\n\n// axios 특징\n// 1) JSON 자료를 object로 자동변환해준다.","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// router import\nimport{ BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}